# name: CI/CD Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   checkout:
#     runs-on: ubuntu-latest
#     outputs:
#       sha: ${{ steps.get_sha.outputs.sha }}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Get commit SHA
#         id: get_sha
#         run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

#   test-backend:
#     runs-on: ubuntu-latest
#     needs: checkout
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r backend/requirements.txt
#       - name: Run backend tests
#         run: PYTHONPATH=backend pytest backend/test/

#   test-frontend:
#     runs-on: ubuntu-latest
#     needs: checkout
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'
#       - name: Install dependencies
#         run: |
#           cd frontend
#           npm install
#           npm install --save-dev @babel/preset-env @babel/preset-react babel-jest
#       - name: Run frontend tests
#         run: |
#           cd frontend
#           npm test

#   build-backend:
#     runs-on: ubuntu-latest
#     needs: test-backend
#     env:
#       DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#       DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ env.DOCKERHUB_USERNAME }}
#           password: ${{ env.DOCKERHUB_TOKEN }}
#       - name: Build and push backend image
#         uses: docker/build-push-action@v5
#         with:
#           context: ./backend
#           file: ./backend/Dockerfile
#           push: true
#           tags: ${{ env.DOCKERHUB_USERNAME }}/stackops-backend:latest

#   build-frontend:
#     runs-on: ubuntu-latest
#     needs: test-frontend
#     env:
#       DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#       DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ env.DOCKERHUB_USERNAME }}
#           password: ${{ env.DOCKERHUB_TOKEN }}
#       - name: Build and push frontend image
#         uses: docker/build-push-action@v5
#         with:
#           context: ./frontend
#           file: ./frontend/Dockerfile
#           push: true
#           tags: ${{ env.DOCKERHUB_USERNAME }}/stackops-frontend:latest

#   terraform:
#     runs-on: ubuntu-latest
#     needs: [build-backend, build-frontend]
#     env:
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       AWS_DEFAULT_REGION: us-east-1 # Change as needed
#     defaults:
#       run:
#         working-directory: ./terraform
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3

#         with:
#           terraform_version: 1.6.6
#       - name: Terraform Init
#         run: terraform init
#       - name: Terraform Plan
#         run: terraform plan
#       - name: Terraform Apply
#         run: terraform apply -auto-approve
